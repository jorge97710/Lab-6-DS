> 5 + 2
5 + 2
5 - 7
3 / 2
3 / 2
5 * 5
5 ^ 2
5 ^ 6
1 < 2
2 < 1
1 < 2
2 < 1
4 <= 6
19 >= 1
5 = 6
6 != 9
5 == 6
LEGIIONFOIL <- 5.3
SUMA_1 <- 5 + 7
SUMA_1
HEMI <- 5.75
ENTE <- 99L
Nomnom <- "holi"
LOL <- TRUE
?
class(1.1)
class(1.1)
class(TRUE)
#función sencilla
class(1.1)
class(TRUE)
class(5L)
class("holi holi")
v1 <- c(1 , 2 , 3)
v2 <- c("a" , 1 , TRUE)
mean(1 , 1, 5, 6 , 7, 9 , 10 , 1 , 7)
install.packages("ggplot2")
library("ggplot2")
library("ggplot2")
Library(C:\Users\User\AppData\Local\Temp\Rtmp6dk8bC\downloaded_packages)
library(ggplot2)
mean(1 , 1, 5, 6 , 7, 9 , 10 , 1 , 7)
mean(v1)
mean(v1)
5 + 2
5 - 7
3 / 2
5 * 5
5 ^ 6
#operadores lógicos
1 < 2
2 < 1
4 <= 6
19 >= 1
5 == 6
6 != 9
#ASIGNACION 2 DE VALORES
HEMI <- 5.75
ENTE <- 99L
Nomnom <- "holi"
LOL <- TRUE
library(ggplot2)
mean(v1)
print('puta hihi')
setwd("C:/Users/User/Desktop/Lab-6-DS")
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data$reviews.text
removeURL <- function(data) gsub("http\\S+", "", x)
view(data)
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
View(data)
View(data)
data<- data$reviews.text
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data.set( text = data$reviews.text)
data<- data.frame( text = data$reviews.text)
View(data)
View(data)
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data.frame( text = data$reviews.text)
removeURL <- function(data) gsub("http\\S+", "", x)
removeHash <- function(data) gsub("[@#&]\\S+", "", x)
removeNumPunct <- function(data) gsub("[^A-z[:space:]']*", "", x)
h <- hash()
library(tidyverse)
library(tau)
library(tm)
library(hash)
h <- hash()
for (b in 1:nbatch - 1) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
blog <- blog.full[blog.len * b + (1:blog.len)]
news <- news.full[news.len * b + (1:news.len)]
twit <- twit.full[twit.len * b + (1:twit.len)]
bnt <- c(blog, news, twit) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
nbtach <- 60
for (b in 1:nbatch - 1) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
blog <- blog.full[blog.len * b + (1:blog.len)]
news <- news.full[news.len * b + (1:news.len)]
twit <- twit.full[twit.len * b + (1:twit.len)]
bnt <- c(blog, news, twit) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
nbtach <- 60
for (b in 1:nbatch - 1) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
blog <- blog.full[blog.len * b + (1:blog.len)]
news <- news.full[news.len * b + (1:news.len)]
twit <- twit.full[twit.len * b + (1:twit.len)]
bnt <- c(blog, news, twit) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
nbtach <- 60
for (b in 1:nbatch - 1) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
blog <- blog.full[blog.len * b + (1:blog.len)]
news <- news.full[news.len * b + (1:news.len)]
twit <- twit.full[twit.len * b + (1:twit.len)]
bnt <- c(blog, news, twit) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
blog <- blog.full[blog.len * b + (1:blog.len)]
news <- news.full[news.len * b + (1:news.len)]
twit <- twit.full[twit.len * b + (1:twit.len)]
bnt <- c(blog, news, twit) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
#concatetar los textos
data <- data[data.len * b + (1:data.len)]
h <- hash()
nbtach <- 60
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
#concatetar los textos
data <- data[data.len * b + (1:data.len)]
bnt <- c(data) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
news <- news.full[news.len * b + (1:news.len)]
#concatetar los textos
data <- data[data. len * b + (1:data.len)]
#concatetar los textos
data <- data[data.len * b + (1:data.len)]
for i in data:
print(i)
for i in data:
print(i)
for c in data:
print(i)
for (val in data){
print(val)
}
data += val + " "
for (val in data){
data += val + " "
}
data<- data.frame( text = data$reviews.text)
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data.frame( text = data$reviews.text)
data = val + 1
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data.frame( text = data$reviews.text)
for (val in data){
variable %+=% val + " "
}
for (val in data){
variable=val + " "
}
for (val in data){
variable <- val + " "
}
for (val in data){
variable <- val
}
print(variable)
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
bnt <- c(vairable) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
variable
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
bnt <- c(variable) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
library("tm")
library(dplyr)
data <- read.csv("C:/Users/User/Desktop/Lab-6-DS/GrammarandProductReviews.csv")
data<- data.frame( text = data$reviews.text)
for (val in data){
variable <- val
}
print(variable)
removeURL <- function(data) gsub("http\\S+", "", x)
removeHash <- function(data) gsub("[@#&]\\S+", "", x)
removeNumPunct <- function(data) gsub("[^A-z[:space:]']*", "", x)
h <- hash()
nbtach <- 60
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
bnt <- c(variable) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
removeURL <- function(data) gsub("http\\S+", "", variable)
removeHash <- function(data) gsub("[@#&]\\S+", "", variable)
removeNumPunct <- function(data) gsub("[^A-z[:space:]']*", "", variable)
candidate <- gram[3]
count <- trigram[[i]]
nbtach <- 60
for (b in 1:49) {
# for (b in 12932) {
message(sprintf("Processing the %i-th batch", b))
bnt <- c(variable) %>%
removeURL() %>% removeHash() %>%
removeNumPunct() %>% tolower() %>% stripWhitespace()
#busqueda de trigrama
trigram <- textcnt(bnt, n=3, split=" ", method="string", decreasing = TRUE)
#crear hash
for (i in 1:length(trigram)) {
if (trigram[i] < 4) {
break
} else {
gram <- strsplit(names(trigram[i]), split = ' ')[[1]]
history <- paste0(gram[1:2], collapse = ' ')
candidate <- gram[3]
count <- trigram[[i]]
if (candidate %in% h[[history]]$candidate) {
index <- h[[history]]$candidate == candidate
h[[history]]$count[index] <- h[[history]]$count[index] + count
} else {
h[[history]]$candidate <- c(h[[history]]$candidate, candidate)
h[[history]]$count <- c(h[[history]]$count, count)
}
}
}
gc()
}
